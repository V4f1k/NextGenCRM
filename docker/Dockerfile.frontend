# Multi-stage build for React frontend
FROM node:18-alpine as base

# Set working directory
WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install dependencies
RUN npm install --only=production && npm cache clean --force

# Development stage
FROM node:18-alpine as development

WORKDIR /app

# Copy package files
COPY frontend/package*.json ./

# Install all dependencies (including dev) and clear any cache
RUN npm install && npm cache clean --force

# Copy source code
COPY frontend/ .

# Expose port
EXPOSE 3000

# Clear any existing cache and start development server
CMD ["sh", "-c", "rm -rf node_modules/.vite node_modules/.tmp 2>/dev/null || true && npm run dev:docker"]

# Build stage
FROM base as build

# Copy source code
COPY frontend/ .

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine as production

# Copy custom nginx config
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built app from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy environment script
COPY docker/env.sh /docker-entrypoint.d/env.sh
RUN chmod +x /docker-entrypoint.d/env.sh

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]